version: 2.1

orbs:
  # Replace this with your own!
  dop: dbmaestro/devops-automation@<<pipeline.parameters.dev-orb-version>>
  orb-tools: circleci/orb-tools@10.0
  bats: circleci/bats@1.0
  shellcheck: circleci/shellcheck@2.0

# Pipeline Parameters
## These parameters are used internally by orb-tools. Skip to the Jobs section.
parameters:
  run-integration-tests:
    description: An internal flag to prevent integration test from running before a development version has been created.
    type: boolean
    default: false
  dev-orb-version:
    description: >
      The development version of the orb to test.
      This value is automatically adjusted by the "trigger-integration-tests-workflow" job to correspond with the specific version created by the commit and should not be edited.
      A "dev:alpha" version must exist for the initial pipeline run.
    type: string
    default: "dev:alpha"

jobs:
  # Define one or more jobs which will utilize your orb's commands and parameters to validate your changes.
  integration-test-1:
    docker:
      - image: cimg/openjdk:16.0.2
    environment:
      DBMAESTRO_SERVER_ADDRESS: "35.239.85.41:7017"
      DBMAESTRO_USERNAME: "test@dbmaestro.com"
    steps:
      - checkout
    #   - run:
    #       command: wget -O /dev/stdout 35.239.85.41:7000/run/run
    #       name: Refresh target instance
    #   - dop/download-automation-jar
    #   - dop/get-roles:
    #       file_path: "roles.csv"
    #   - dop/get-user-project-roles:
    #       file_path: "userroles.csv"
    #   - dop/get-env-packages:
    #       project_name: "CircleTest1"
    #       environment_name: "Release Source"
    #   - dop/project-mapping:
    #       project_name: "CircleTest1"
    #       target_project_name: "CircleTest2"
    #   - dop/display-project-mapping:
    #       project_name: "CircleTest1"
    #       target_project_name: "CircleTest2"
    #   - dop/upgrade:
    #       project_name: "CircleTest1"
    #       environment_name: "Release Source"
    #       package_name: "V1"
    #   - dop/upgrade:
    #       project_name: "CircleTest2"
    #       environment_name: "Release Source"
    #       package_name: "V1"
    #   - dop/set-version:
    #       project_name: "CircleTest1"
    #       environment_name: "Release Source"
    #       package_name: "V1"
    #   - dop/transfer-package:
    #       project_name: "CircleTest1"
    #       target_project_name: "CircleTest2"
    #       source_package: "V1"
    #       target_package: "V2"
    #   - dop/transfer-down-package:
    #       project_name: "CircleTest2"
    #       target_project_name: "CircleTest1"
    #       source_package: "V1"
    #       version_level: "MAJOR"
    #   - dop/transfer-up-package:
    #       project_name: "CircleTest1"
    #       target_project_name: "CircleTest2"
    #       source_package: "V1"
    #       version_level: "MINOR"
    #   - dop/view-labels:
    #       project_name: "CircleTest1"
    #       environment_name: "Release Source"
    #   - dop/add-tag-type:
    #       tag_type_name: "INTEGRATIONTEST"
    #   - dop/add-tag:
    #       project_name: "CircleTest1"
    #       package_name: "V0"
    #       tag_type_name: "Task"
    #       tag_name: "TestTag"
    #   - dop/update-tag-type:
    #       tag_type_name: "INTEGRATIONTEST"
    #       new_tag_type_name: "INTEGRATIONTESTRN"
    #   - dop/delete-tag:
    #       project_name: "CircleTest1"
    #       package_name: "V0"
    #       tag_type_name: "Task"
    #       tag_name: "TestTag"
    #   - dop/delete-tag-type:
    #       tag_type_name: "INTEGRATIONTESTRN"
    #   - dop/backup-environment:
    #       project_name: "CircleTest1"
    #       environment_name: "Release Source"
    #       backup_name: "Test_backup"
    #       backup_description: "CreatedByCircleCI"
    #   - dop/restore-environment:
    #       project_name: "CircleTest1"
    #       environment_name: "Release Source"
    #       backup_name: "Test_backup"
    #   - dop/apply-label:
    #       project_name: "CircleTest1"
    #       environment_name: "Release Source"
    #       label_name: "Test_label"
    #       label_description: "AddedByCircleCI"
    #   - dop/delete-project-mapping:
    #       project_name: "CircleTest1"
    #       target_project_name: "CircleTest2"
    #   - dop/validate:
    #       project_name: "CircleTest1"
    #       environment_name: "Release Source"
    #   - dop/export-project:
    #       project_name: "MSSQL1"
    #       file_path: "export.json"
    #   - dop/update-project:
    #       file_path: "export.json"
    #   #Import section
    #   - dop/import-project:
    #       file_path: "project.json"
    #   - dop/create-manifest-file:
    #       path_to_scripts_folder: "V3"
    #   - run:
    #       command: cd V3&&zip -r ../V3.zip *&&cd ..
    #       name: Zip the package
    #   - dop/package:
    #       project_name: "DEMO"
    #       file_path: "V3.zip"
    #   - dop/pre-check:
    #       project_name: "DEMO"
    #       package_name: "V3"
    #   - dop/delete-project:
    #       project_name: "DEMO"
    #   #Import section end
    #   - dop/rollback:
    #       project_name: "MSSQL1"
    #       environment_name: "Release Source"
    #       package_name: "V0"
    #   - dop/build:
    #       project_name: "MSSQL1"
    #       environment_name: "Dev_Env_1"
    #       package_name: "V4"
    #   - dop/custom-build:
    #       source_project_name: "MSSQL1"
    #       source_environment_name: "Dev_Env_1"
    #       target_project_name: "MSSQL1"
    #       target_environment_name: "Release Source"
    #       source_version_type: "live"
    #       target_version_type: "live"
    #   - dop/pre-check-env:
    #       project_name: "MSSQL1"
    #       package_name: "V1"
    #       environment_name: "Release Source"
    #   - dop/run-package-dev:
    #       project_name: "MSSQL1"
    #       environment_name: "Dev_Env_1"
    #       package_name: "AH1"
    #   - dop/get-specific:
    #       project_name: "MSSQL1"
    #       environment_name: "Dev_Env_1"
    #       package_name: "V0"
    #       server_address: "35.239.85.41:7017"
    #       auth_type: "DBmaestroAccount"
    #       username: "test@dbmaestro.com"
    #   - dop/get-latest:
    #       project_name: "MSSQL1"
    #       environment_name: "Dev_Env_1"
    #       server_address: "35.239.85.41:7017"
    #       auth_type: "DBmaestroAccount"
    #       username: "test@dbmaestro.com"
      # - dop/sync-permissions:
      #     server_address: "35.239.85.41:7017"
      #     auth_type: "DBmaestroAccount"
      #     username: "test@dbmaestro.com"

workflows:
  # Prior to producing a development orb (which requires credentials) basic validation, linting, and even unit testing can be performed.
  # This workflow will run on every commit
  test-pack:
    unless: << pipeline.parameters.run-integration-tests >>
    jobs:
      - orb-tools/lint # Lint Yaml files
      - orb-tools/pack # Pack orb source
      - shellcheck/check:
          dir: ./src/scripts
          exclude: SC2148
      # optional: Run BATS tests against your scripts
      - bats/run:
          path: ./src/tests
      # Publish development version(s) of the orb.
      - orb-tools/publish-dev:
          orb-name: dbmaestro/devops-automation
          context: orb-publishing # A restricted context containing your private publishing credentials. Will only execute if approved by an authorized user.
          requires:
            - orb-tools/lint
            - orb-tools/pack
            - bats/run
            - shellcheck/check
      # Trigger an integration workflow to test the
      # dev:${CIRCLE_SHA1:0:7} version of your orb
      - orb-tools/trigger-integration-tests-workflow:
          name: trigger-integration-dev
          context: orb-publishing
          requires:
            - orb-tools/publish-dev

  # This `integration-test_deploy` workflow will only run
  # when the run-integration-tests pipeline parameter is set to true.
  # It is meant to be triggered by the "trigger-integration-tests-workflow"
  # job, and run tests on <your orb>@dev:${CIRCLE_SHA1:0:7}.
  integration-test_deploy:
    when: << pipeline.parameters.run-integration-tests >>
    jobs:
      # Run any integration tests defined within the `jobs` key.
      - integration-test-1
      # Publish a semver version of the orb. relies on
      # the commit subject containing the text "[semver:patch|minor|major|skip]"
      # as that will determine whether a patch, minor or major
      # version will be published or if publishing should
      # be skipped.
      # e.g. [semver:patch] will cause a patch version to be published.
      - orb-tools/dev-promote-prod-from-commit-subject:
          orb-name: dbmaestro/devops-automation
          context: orb-publishing
          add-pr-comment: false
          fail-if-semver-not-indicated: true
          publish-version-tag: false
          requires:
            - integration-test-1
          filters:
            branches:
              only:
                - master
                - main
